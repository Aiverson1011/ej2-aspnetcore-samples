@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="col-md-8 control-section">
        <div class="content-wrapper">
            <ejs-lineargauge id="linear" load="gaugeLoad" title = 'Temperature Measure'>
              <e-lineargauge-axes>
                  <e-lineargauge-axis>
                      <e-axis-line width="0"></e-axis-line>
                      <e-axis-majorticks interval="20" color="#9e9e9e"></e-axis-majorticks>
                  </e-lineargauge-axis>
                  <e-lineargauge-axis minimum="0" maximum="180" opposedPosition="true">
                      <e-axis-line width="0"></e-axis-line>
                      <e-axis-majorticks interval="20" color="#9e9e9e"></e-axis-majorticks>
                  </e-lineargauge-axis>
              </e-lineargauge-axes> 
            </ejs-lineargauge>
        </div>
    </div>
    <div class="col-md-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr>
                    <td>
                        <div>Orientation</div>
                    </td>
                    <td>
                        <div>
                            <select name="selectIndex" autocomplete="off" id="orientationMode" style="width:90%">
                                <option value="Vertical" selected="">Vertical</option>
                                <option value="Horizontal">Horizontal</option>
                            </select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>Container Type</div>
                    </td>
                    <td>
                        <div>
                            <select name="selectIndex" autocomplete="off" id="containerMode" style="width:90%">
                                <option value="Normal">Normal</option>
                                <option value="RoundedRectangle">RoundedRectangle</option>
                                <option value="Thermometer" selected="">Thermometer</option>
                            </select>
                        </div>
                    </td>
                </tr>

            </tbody>
        </table>
    </div>
}
<script>
    var random, usage;
    window.addEventListener("load", function (event) {
        var containerMode = new ej.dropdowns.DropDownList({
            index: 0,
            placeholder: 'Select Range Bar Color',
            width: 120,
            change: function () {
                gauge.container.type = containerMode.value;
                gauge.refresh();
            }
        });
        containerMode.appendTo('#containerMode');
        var orientationMode = new ej.dropdowns.DropDownList({
            index: 0,
            placeholder: 'Select Range Bar Color',
            width: 120,
            change: function () {
                gauge.orientation = orientationMode.value;
                gauge.refresh();
            }
        });
        orientationMode.appendTo('#orientationMode');       
    });
    
    var gauge;
    window.gaugeLoad = function (args) {
        var theme = location.hash.split('/')[1];
        theme = theme ? theme : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() + theme.slice(1));
        if (window.gaugeLoaded)
            return;
        window.gaugeLoaded = true;
        gauge = args.gauge;
        gauge.container = {
            width: 13,
                roundedCornerRadius: 5,
                    type: 'Thermometer'
        },
        args.gauge.orientation = "Horizontal";
        var axis = args.gauge.axes[0];

        axis.pointers = [
            {
                value: 90,
                height: 13,
                width: 13,
                roundedCornerRadius: 5,
                type: 'Bar',
                color: '#f02828'
            }
        ];
        
        gauge.axes[1].pointers = [{ width: 0 }];
        gauge.orientation = 'Vertical';
        
        gauge.annotations = [{
            content: '<div id="pointer" style="width:70px"><h1 style="font-size:14px;' +
            'color:#424242">${axes[0].pointers[0].currentValue} MPH</h1></div>',
            axisIndex: 0,
            axisValue: 10,
            x: 10,
            y: 60,
            zIndex: '1'
        }];

    }
</script>
@section Meta{
    <meta name="description" content="This demo for Essential JS2 Linear Gauge control demonstrates the various types of containers available in linear gauge." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the type of containers used in linear gauge. Orientation and container type of linear gauge can be changed by using <code>Orientation</code> and <code>Container Type</code> options
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            This sample demonstrates the orientation and container customization in linear gauge. The gauge can be rendered either in
            vertical or horizontal orientation. And you can use <code>type</code> property in container to change the
            type of the container.
        </p>
        <br>
        <p>
            More information about container can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation">documentation section</a>.
        </p>
    </div>
}