@using Syncfusion.EJ2

@section ControlsSection{
    <div class="control-section">
        <ejs-spreadsheet id="spreadsheet" openUrl="Open" saveUrl="Save" dataBound="dataBoundEvent">
            <e-sheets>
                <e-sheet name="Car Sales Report">
                    <e-rangesettings>
                        <e-rangesetting dataSource="ViewBag.DefaultData"></e-rangesetting>
                    </e-rangesettings>
                    <e-rows>
                        <e-row>
                            <e-cells>
                                <e-cell value="Customer Name"></e-cell>
                                <e-cell index=3 value="Payment Mode"></e-cell>
                                <e-cell value="Delivery Date"></e-cell>
                            </e-cells>
                        </e-row>
                        <e-row index=30>
                            <e-cells>
                                <e-cell index=4 value="Total Amount:">
                                    <e-style fontWeight="Bold" textAlign="Right"></e-style>
                                </e-cell>
                                <e-cell formula="=SUM(F2:F30)">
                                    <e-style fontWeight="Bold"></e-style>
                                </e-cell>
                            </e-cells>
                        </e-row>
                    </e-rows>
                    <e-columns>
                        <e-column width="180"></e-column>
                        <e-column width="130"></e-column>
                        <e-column width="130"></e-column>
                        <e-column width="180"></e-column>
                        <e-column width="130"></e-column>
                        <e-column width="120"></e-column>
                    </e-columns>
                </e-sheet>
            </e-sheets>
        </ejs-spreadsheet>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the default functionalities of the Syncfusion ASP.NET Core Spreadsheet that includes editing, importing & exporting." />
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the <code>Spreadsheet</code> component and its features such as editing, formulas,
            formatting, importing, and exporting.
        </p>
    </div>

}

@section Description{
    <div id="description">
        <p>
            The <code>Spreadsheet</code> component is used to organize and analyze data in a tabular format.
            It has a built-in calculation library that supports most commonly used formulas. Excel workbook files can be
            imported and exported by providing <code>openUrl</code> &
            <code>saveUrl</code> property.
        </p>
        <p>
            Data binding can be achieved by setting a list objects or an instance of Data Manager to the
            <code>dataSource</code> property under the rangeSettings of sheet. The <code>cellFormat</code> and
            <code>numberFormat</code>
            methods are used to apply format to a range of cells in the <code>dataBound</code> event.
        </p>
        <p>
            More information about the Spreadsheet component can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/spreadsheet/getting-started">
                documentation
            </a> section.
        </p>
    </div>
}

<script>
    function dataBoundEvent() {
        if (this.activeSheetTab === 1 && this.sheets[this.activeSheetTab - 1].name === 'Car Sales Report') {
            this.cellFormat({ fontWeight: 'bold', textAlign: 'center', verticalAlign: 'middle' }, 'A1:F1');
            this.numberFormat('$#,##0.00', 'F2:F31');
        }
    }
</script>

@*custom code start*@

<style>
    .control-section {
        height: 550px;
    }
    #sb-content .e-spreadsheet .e-tab .e-tab-text {
        display: inherit;
    }
</style>

@*custom code end*@
