@using System.Linq
@{
    ViewData["Title"] = "DefaultExporting";
}


@section ControlsSection{
    <div class="control-section">
        <ejs-grid id="Grid" dataSource="ViewBag.datasource" allowExcelExport="true" allowGrouping="true" allowPdfExport="true"  toolbarClick="toolbarClick" toolbar="@(new List<string>() {"ExcelExport", "PdfExport", "CsvExport" })" allowPaging="true">

            
            <e-grid-pagesettings pageCount="5"></e-grid-pagesettings>
            <e-grid-columns>
                <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" textAlign="Right" width="120"></e-grid-column>
                <e-grid-column field="CustomerID" headerText="Customer ID" width="150"></e-grid-column>
                <e-grid-column field="OrderDate" headerText="Order Date" format="yMd" textAlign="Right" width="130"></e-grid-column>
                <e-grid-column field="Freight" headerText="Freight" allowGrouping="false" textAlign="Right" format="C2" width="120"></e-grid-column>
                <e-grid-column field="ShipCountry" visible="false" headerText="Ship Country" width="150"></e-grid-column>
                <e-grid-column field="ShipCity" visible="false" headerText="Ship City" width="150"></e-grid-column>
            </e-grid-columns>


        </ejs-grid>      
    </div>

    <script>

        function toolbarClick(args) {
            var gridObj = document.getElementById("Grid").ej2_instances[0];
            if (args.item.id === 'Grid_pdfexport') {
                gridObj.pdfExport();
            }
            if (args.item.id === 'Grid_excelexport') {
                gridObj.excelExport();
            }
            if (args.item.id === 'Grid_csvexport') {
                gridObj.csvExport();
            }
        }
    </script>
   
    
    }

    @section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates the client-side exporting of the Grid, which allows you to export its data to the Excel, Pdf and CSV formats.
        Use the toolbar buttons to export Grid data to desired format.
		</p>
	</div>
}

   @section Meta{
    <meta name="description" content="This demo for Essential JS 2 grid control shows the client-side exporting of grid content to Excel, PDF, and CSV formats."/>
}

@section Description{
    <div id="description">		   
		 <p>Grid supports client-side exporting which allows you to export its data to the Excel, Pdf and CSV formats.</p>
		<p>In this demo, Grouping is applied for <strong><i>ShipCountry</i></strong> with <code>
			groupCaptionTemplate</code> property is used to display the group caption aggregation for 
			the <strong><i>Freight</i></strong> column and excelexport, pdfexport and csvexport items are defined in the toolbar.
			For these toolbar items, we have definedactions in toolbarClick event to export the Grid data using the 
			<code>excelExport</code>,<code>pdfExport</code>	and <code>csvExport</code>  methods.</p>
	</div>
}