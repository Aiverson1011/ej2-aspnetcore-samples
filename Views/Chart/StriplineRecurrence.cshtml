@using Syncfusion.EJ2
@section ControlsSection{
    @{
        var Vertical = "Vertical";
    }
    <div class="control-section col-md-8" align="center">
        <ejs-chart id="container" title="World Pollution Report" load="load" dataSource="ViewBag.dataSource">
            <e-chart-primaryxaxis valueType="DateTime" interval="5" intervalType="Years"
                                  edgeLabelPlacement="Shift" minimum="new DateTime(1965, 1, 1)" maximum="new DateTime(2010, 1, 1)">
                <e-majorgridlines width="0"></e-majorgridlines>
                <e-primaryxaxis-striplines>
                    <e-primaryxaxis-stripline startFromAxis="true" size="5" isRepeat="true" sizeType="Years" repeatEvery="10" visible="true" color="rgba(167,169,171,0.1)"></e-primaryxaxis-stripline>
                </e-primaryxaxis-striplines>
            </e-chart-primaryxaxis>
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-primaryyaxis minimum="0" maximum="18000" interval="2000">
                <e-majorgridlines color="rgba(167,169,171, 0.3)"></e-majorgridlines>
                <e-majorticklines width="0"></e-majorticklines>
                <e-linestyle width="0"></e-linestyle>
                <e-labelstyle color="transparent"></e-labelstyle>
                <e-primaryyaxis-striplines>
                    <e-primaryyaxis-stripline startFromAxis="true" size="2000" isRepeat="true" repeatEvery="4000" visible="true" color="rgba(167,169,171,0.1)"></e-primaryyaxis-stripline>
                </e-primaryyaxis-striplines>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series xName="xValue" yName="yValue1" type="Column" name="All sources"></e-series>
                <e-series xName="xValue" yName="yValue2" type="Column" name="Autos & Light Trucks"></e-series>
            </e-series-collection>
            <e-chart-tooltipsettings enable="true" format="Year: ${point.x}<br> Tons Per Day: ${point.y}"></e-chart-tooltipsettings>

        </ejs-chart>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 60%">
                        <div>X Axis</div>
                    </td>
                    <td style="width: 40%;">
                        <div>
                            <input type="checkbox" checked id="xIndex" />
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 60%">
                        <div>Y Axis</div>
                    </td>
                    <td style="width: 40%;">
                        <div>
                            <input type="checkbox" checked id="yIndex" />
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

<script>
@*custom code start*@
    window.load = function (args) {
        var selectedTheme = location.hash.split('/')[1];
        selectedTheme = selectedTheme ? selectedTheme : 'Material';
        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/dark/i, "Dark").replace(/light/i, "Light"));
    }
@*custom code end*@
    document.getElementById('xIndex').onchange = () => {
        var chart = document.getElementById('container').ej2_instances[0];
        chart.animateSeries = false;
        chart.primaryXAxis.stripLines[0].visible = (document.getElementById('xIndex')).checked;
    };
    document.getElementById('yIndex').onchange = () => {
        var chart = document.getElementById('container').ej2_instances[0];
        chart.animateSeries = false;
        chart.primaryYAxis.stripLines[0].visible = (document.getElementById('yIndex')).checked;
    };
</script>
}
@*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
    <meta name="description" content="This demo for Essential JS2 Chart control shows how to render the strip line recurrence in charts." />
}
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample visualizes the World Population Report with default column series in the chart. Data points values are showed
            by using data label.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure the recurrence stripline in chart. Striplines are used to annotate the highlighted region with some notes. You
            can use
            <code>border</code>,
            <code>fill</code>
            <code>dash-array</code> properties to customize the striplines.
        </p>
        <p>
            Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
        </p>

        <p>
            More information on the strip line can be found in this &nbsp;
            <a target="_blank" href="http://ej2.syncfusion.com/react/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
        </p>
    </div>
}
