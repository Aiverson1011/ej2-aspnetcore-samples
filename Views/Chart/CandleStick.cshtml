@using Syncfusion.EJ2
@section ControlsSection{

<div class="control-section">
    <div id="title" align="center" style="font-size: 15px; font-style: normal;font-family: 'Segoe UI'; font-weight: 500;">AAPL Historical</div>
    <br>

    <ejs-rangenavigator id="selector" valueType="DateTime" xName="x" yName="close" disableRangeSelector="true"
                        changed="changed" load="window.onChartLoad" loaded="window.loaded">
        <e-rangenavigator-periodselectorsettings position="Top">
            <e-periods>
                <e-period interval="1" intervalType="Months" text="1M"></e-period>
                <e-period interval="3" intervalType="Months" text="3M"></e-period>
                <e-period interval="6" intervalType="Months" text="6M"></e-period>
                <e-period interval="1" text="1Y"></e-period>
                <e-period interval="2" text="2Y" selected="true"></e-period>
                <e-period text="All"></e-period>
            </e-periods>
        </e-rangenavigator-periodselectorsettings>
    </ejs-rangenavigator>


    <ejs-chart id="chart" align="center" load="window.load" axisLabelRender="axisLabelRender" tooltipRender="tooltipRender" pointRender="pointRender">
        <e-chart-tooltipsettings enable="true" shared="true">
        </e-chart-tooltipsettings>
        <e-chart-primaryxaxis valueType="DateTime">
            <e-crosshairtooltip enable="true"></e-crosshairtooltip>
            <e-majorgridlines width="0"></e-majorgridlines>
        </e-chart-primaryxaxis>
        <e-chart-primaryyaxis title="Volume" rangePadding="None" opposedPosition="true">
            <e-majorgridlines width="0"></e-majorgridlines>
            <e-majorticklines width="0"></e-majorticklines>
            <e-linestyle width="0"></e-linestyle>
        </e-chart-primaryyaxis>
        <e-chart-chartarea>
            <e-chartarea-border width="0"></e-chartarea-border>
        </e-chart-chartarea>
        <e-chart-legendsettings visible="false"></e-chart-legendsettings>
        <e-chart-rows>
            <e-chart-row height="30%"></e-chart-row>
            <e-chart-row height="70%"></e-chart-row>
        </e-chart-rows>
        <e-chart-axes>
            <e-chart-axis name="secondary" opposedPosition=true rowIndex=1 rangePadding="None"
                          labelFormat="n0" title="Price" plotOffset=30 >
                <e-linestyle width="0"></e-linestyle>
            </e-chart-axis>
        </e-chart-axes>
        <e-chart-crosshairsettings enable=true lineType="Vertical"></e-chart-crosshairsettings>
        <e-series-collection>
            <e-series xName="x" yName="volume"
                      type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column"></e-series>
            <e-series xName="x" yName="y" low="low" high="high" open="open" close="close" name="Apple Inc" yAxisName="secondary" bearFillColor="#2ecd71" bullFillColor="#e74c3d"
                      type="@Syncfusion.EJ2.Charts.ChartSeriesType.Candle"></e-series>

        </e-series-collection>
    </ejs-chart>
</div>
    <script src="~/scripts/chart/stock-chart-data.js"></script>
    <script type="text/javascript">
        var data = chartData;
        var zoomFactor, zoomPosition;
        var pointColors = [];
        var selectedTheme = location.hash.split('/')[1];
        selectedTheme = selectedTheme ? selectedTheme : 'Material';
        var theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
        window.onChartLoad = function (args) {

            args.rangeNavigator.theme = theme;
            args.rangeNavigator.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.rangeNavigator.dataSource = data;
        }
        window.loaded = function (args) {
            if (!ej.base.Browser.isDevice && document.getElementById('selector_Secondary_Element')) {
                document.getElementById('selector_Secondary_Element').style.transform = 'translate(14%)';
            }

        }
        changed = function (args) {
            if ((document.getElementById('chart').childNodes.length > 1)) {
                var chart = document.getElementById('chart').ej2_instances[0];
                var data = initialData = chartData.filter(function (data) {
                    return (data['x'].getTime() >= args.start.getTime() &&
                        data['x'].getTime() <= args.end.getTime());
                });               
               
                chart.primaryXAxis.zoomPosition = args.zoomPosition;
                chart.primaryXAxis.zoomFactor = args.zoomFactor;
                chart.dataBind();
            }
        }
        window.load = function (args) {
            args.chart.theme = theme;
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.chart.series[0].dataSource = chartData;
            args.chart.series[1].dataSource = chartData;
            args.chart.primaryXAxis.zoomFactor = zoomFactor;
            args.chart.primaryXAxis.zoomPosition = zoomPosition;
        }
        var getLabelText = function (value) {
            return (((value) / 1000000000)).toFixed(1) + 'bn';
        };
        axisLabelRender = function (args) {
            if (args.axis.name === 'primaryYAxis') {
                args.text = getLabelText(+args.text);
            }
			if (args.axis.name === 'secondary') {
                args.text = '$' + args.text;
            }

        };
        pointRender = function (args) {
            if (args.series.type === 'Candle') { pointColors.push(args.fill); } else {
                args.fill = pointColors[args.point.index];
            }
        };

        tooltipRender = function (args) {
            if (!args.series.index) {
                args.text = 'Volume : <b>' + getLabelText(args.text.split('<b>')[1].split('</b>')[0]) + '</b>';
            }
        };
    </script>
}
@section Meta{
    <meta name="description" content="This demo for Essential JS2 Chart control shows how to render the candle series." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample visualizes the AAPL historical data with default HILO series in the chart.
            Tooltip and crosshair show the information about the data and period.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure the Hilo type series. You can use <code>border</code>,
            <code>fill</code> properties to customize the area.
        </p>
        <p>
            Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
        </p>


        <p>
            More information on the Hilo series can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
        </p>
    </div>
}
@section Scripts {
}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
