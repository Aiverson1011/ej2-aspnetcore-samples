@using Syncfusion.EJ2
@section ControlsSection{
    <script src="~/scripts/chart/financial-data.js"></script>
    <div class="control-section col-lg-9" align="center">

        <ejs-chart id="container" load="window.onChartLoad" title="Sales Comparision" pointRender="labelRender">
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-primaryxaxis title="Manager" valueType="Category">
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis minimum="0" maximum="20000" title="Sales" >
                <e-majorgridlines width="0"></e-majorgridlines>
                <e-majorticklines width="0"></e-majorticklines>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series dataSource="ViewBag.dataSource" xName="xValue" yName="yValue" type="Column"></e-series>
            </e-series-collection>
        </ejs-chart>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr id="button-control" style="height: 50px">
                    <td align="center">
                        <ejs-button id="button" content="Print" iconCss="e-icons e-play-icon" cssClass="e-flat" isPrimary="true"></ejs-button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <script>
    @*custom code start*@
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/dark/i, "Dark").replace(/light/i, "Light"));
        }
        @*custom code end*@
        document.getElementById('button').onclick = () => {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.print();
        };
        var labelRender = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                args.fill = window.fabricColors[args.point.index % 10];
            }
            else if (selectedTheme === 'material') {
                args.fill = window.materialColors[args.point.index % 10];
            }
            else if (selectedTheme === 'highcontrast') {
                args.fill = window.highContrastColors[args.point.index % 10];
            }
            else {
                args.fill = window.bootstrapColors[args.point.index % 10];
            }
        };
    </script>
    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }

        .e-play-icon::before {
            content: '\e34b';
        }
    </style>
}

@section Scripts {

}

@section Meta{
    <meta name="description" content="This demo for Essential JS2 Chart control shows how to print the charts." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes print feature in chart control.
    </p>
}
@section Description{
    <p>
        This sample demonstrates the print feature in chart
    </p>
    <br>
    <p>
        More information on the area series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
