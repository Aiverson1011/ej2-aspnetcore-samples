@using Syncfusion.EJ2
@section ControlsSection{
<div class="control-section">
    <div id="container" align="center">
        <ejs-chart id="lineContainer" load="window.onChartLoad" title="Organic Revenue in US - 2016">
            <e-chart-tooltipsettings enable="true">
            </e-chart-tooltipsettings>
            <e-chart-legendsettings visible="false">
            </e-chart-legendsettings>
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-annotations>
                <e-chart-annotation content="#templateWrap" region="Series" x="90%" y="12%"></e-chart-annotation>
            </e-chart-annotations>
            <e-chart-primaryxaxis valueType="DateTime" labelFormat="MMM" intervalType="Months" edgeLabelPlacement="Shift">                      
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis labelFormat="${value}K"rangePadding="None" minimum=0 maximum=200 >
                <e-linestyle width="0"></e-linestyle>
                <e-majorticklines width="0"></e-majorticklines>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series name="US" segmentAxis="X" xName="XValue" width="2" opacity="1" yName="YValue" type="@Syncfusion.EJ2.Charts.ChartSeriesType.MultiColoredArea">
                    <e-segments>
                        <e-segment value="new DateTime(2016, 5, 1)" color="url(#winter"></e-segment>
                        <e-segment value="new DateTime(2016, 8, 1)" color="url(#summer)"></e-segment>
                        <e-segment color="url(#spring)"></e-segment>
                    </e-segments>
                </e-series>
            </e-series-collection>
        </ejs-chart>
    </div>
    @*custom code start*@
    <script>
        window.onChartLoad = function (args) {
            var dataValues = [];
            [150, 71.5, 106.4, 100.25, 70.0, 106.0, 85.6, 78.5, 76.4, 86.1, 155.6, 160.4].map(function (value, index) {
                dataValues.push({ XValue: new Date(2016, index, 1), YValue: value });
            });
            args.chart.series[0].dataSource = dataValues;
            var selectedTheme = themeName ? themeName : "Material";
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/dark/i, "Dark").replace(/light/i, "Light"));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
    @*custom code end*@
    <script id="templateWrap" type="text/x-template">
        <div style="width:80px; padding: 5px;">
            <table style="width: 100%">
                <tr>
                    <td>
                        <div style='width: 10px; height: 10px;background:linear-gradient(#4ca1af, #c4e0e5);border-radius: 15px;'></div>
                    </td>
                    <td style="padding-left: 5px;">
                        Winter
                    </td>
                </tr>
                <tr>
                    <td>
                        <div style='width: 10px; height: 10px; background:linear-gradient(#ffa751, #ffe259);border-radius: 15px;'></div>
                    </td>
                    <td style="padding-left: 5px;">
                        Summer
                    </td>
                </tr>
                <tr>
                    <td>
                        <div style='width: 10px; height: 10px; background:linear-gradient(#1d976c, #93f9b9);border-radius: 15px;'></div>
                    </td>
                    <td style="padding-left: 5px;">
                        Spring
                    </td>
                </tr>
            </table>
        </div>
    </script>
    <style>
        #control-container {
            padding: 0px !important;
        }

        #winter stop {
            stop-color: #4ca1af;
        }

            #winter stop[offset="0"] {
                stop-color: #c4e0e5;
            }

            #winter stop[offset="1"] {
                stop-color: #4ca1af;
            }

        #summer stop {
            stop-color: #ffa751;
        }

            #summer stop[offset="0"] {
                stop-color: #ffe259;
            }

            #summer stop[offset="1"] {
                stop-color: #ffa751;
            }

        #spring stop {
            stop-color: #1d976c;
        }

            #spring stop[offset="0"] {
                stop-color: #93f9b9;
            }

            #spring stop[offset="1"] {
                stop-color: #1d976c;
            }
    </style>
    <svg style="height: 0">
        <defs>
            <linearGradient id="winter" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="summer" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="spring" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
        </defs>
    </svg>
</div>
}
@*custom code start*@
@section Scripts {

}

@section Meta{
    <meta name="description" content="This demo for Essential JS2 Chart control shows how to render and configure the points in a particular range using MultiColoredArea series." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the organic revenue data with multi colored area series in the chart.
        Data points are enhanced with segments and tooltip.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the points in a particular range by using <code>MultiColoredArea</code> series type.
        Points under the range can be configured with <code>color</code>, <code>width</code>, and <code>dashArray</code>.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap a point in touch enabled devices.
    </p>
    <br>
  
}