@using Syncfusion.EJ2
@section ControlsSection{
    @{ 
        var series = new string[0];
        var indicator = new string[0];
    }

    <div class="control-section" align="center">
            <ejs-stockchart id="stockchartarea" load="chartLoad" seriesType="series" indicatorType="indicator" title="AAPL Stock Price">
                <e-stockchart-series-collection>
                    <e-stockchart-series xName="x" yName="high" type="Area" fill="#BDEDE9" name="google">
                    </e-stockchart-series> 
                </e-stockchart-series-collection>
            </ejs-stockchart>
 
    </div>
    <script src="~/scripts/StockChartData/aapl.js"></script>
    <script>
        var data = aapl;
        function chartLoad(args) {
            letselectedTheme: string = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.stockChart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/dark/i, "Dark").replace(/light/i, "Light");
            args.stockChart.series[0].dataSource = data;
            args.stockChart.border = { width: 0 };
            args.stockChart.crosshair = { enable: true };
            args.stockChart.primaryXAxis = { majorGridLines: { width: 0 }, crosshairTooltip: { enable: true } },
                args.stockChart.primaryYAxis = {
                    interval: 40, lineStyle: { color: 'transparent' },
                    majorTickLines: { color: 'transparent', width: 0 }, crosshairTooltip: { enable: true }
                }
        }
    </script>
}

@section Scripts {

}

@section ActionDescription{
    <p>
        This sample visualizes stock data with area. Period and range selector help us to navigate different of data.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the Stock chart.
        <code>AreaSeries</code> is used to represent selected data value.
    </p>
    <br>
}