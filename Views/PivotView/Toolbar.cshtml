@using Syncfusion.EJ2.PivotView
@section Meta{
    <meta name="description" content="This demo for Essential JS2 ASP.NET Core Pivot Table control demonstrate the toolbar feature of the pivotgrid widget" />
}
@section ControlsSection{

    <div class="control-section" id="pivot-grid-section">
        <div class="content-wrapper">
            <ejs-pivotview id="pivotview" allowExcelExport="true" allowConditionalFormatting="true" allowPdfExport="true" showToolbar="true" allowCalculatedField="true" showFieldList="true" width="100%" height="300" toolbar="@(new List<string>() {"New", "Save", "SaveAs", "Rename", "Remove", "Load",
        "Grid", "Chart", "Export", "SubTotal", "GrandTotal", "ConditionalFormatting", "FieldList" })" saveReport="saveReport" loadReport="loadReport" fetchReport="fetchReport" renameReport="renameReport" removeReport="removeReport" newReport="newReport" toolbarRender="beforeToolbarRender">
                <e-datasource data="@ViewBag.data" expandAll="false" enableSorting="true">
                    <e-formatsettings>
                        <e-field name="Amount" format="C0" maximumSignificantDigits="10" minimumSignificantDigits="1" useGrouping="true"></e-field>
                    </e-formatsettings>
                    <e-rows>
                        <e-field name="Country"></e-field>
                        <e-field name="Products"></e-field>
                    </e-rows>
                    <e-columns>
                        <e-field name="Year"></e-field>
                        <e-field name="Order_Source" caption="Order Source"></e-field>
                    </e-columns>
                    <e-values>
                        <e-field name="In_Stock" caption="In Stock"></e-field>
                        <e-field name="Sold" caption="Units Sold"></e-field>
                        <e-field name="Amount" caption="Sold Amount"></e-field>
                    </e-values>
                    <e-filters>
                        <e-field name="Product_Categories" caption="Product Categories"></e-field>
                    </e-filters>
                </e-datasource>
                <e-gridSettings columnWidth="140"></e-gridSettings>
                <e-displayOption view="Both"></e-displayOption>
            </ejs-pivotview>
        </div>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }

        @@media only screen and (max-width: 400px) {
            #pivot-grid-section {
                overflow: auto;
            }
        }
    </style>
    <script>
        
        function saveReport(args) {
            var reports = [];
            var isSaved = false;
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reports = JSON.parse(localStorage.pivotviewReports);
            }
            if (args.report && args.reportName && args.reportName !== '') {
                reports.map(function (item) {
                    if (args.reportName === item.reportName) {
                        item.report = args.report;
                        isSaved = true;
                    }
                });
                if (!isSaved) {
                    reports.push(args);
                }
                localStorage.pivotviewReports = JSON.stringify(reports);
            }
        }
        function fetchReport(args) {
            var reportCollection = [];
            var reeportList = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                reeportList.push(item.reportName);
            });
            args.reportName = reeportList;
        }
        function loadReport(args) {
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                if (args.reportName === item.reportName) {
                    args.report = item.report;
                }
            });
            if (args.report) {
                pivotGridObj.dataSource = JSON.parse(args.report).dataSource;
            }
        }
        function removeReport(args) {
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            for (var i = 0; i < reportCollection.length; i++) {
                if (reportCollection[i].reportName === args.reportName) {
                    reportCollection.splice(i, 1);
                }
            }
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                localStorage.pivotviewReports = JSON.stringify(reportCollection);
            }
        }
        function renameReport(args) {
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                if (args.reportName === item.reportName) {
                    item.reportName = args.rename;
                }
            });
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                localStorage.pivotviewReports = JSON.stringify(reportCollection);
            }
        }
        function newReport() {
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            pivotGridObj.setProperties({
                dataSource: {
                    columns: [],
                    rows: [],
                    values: [],
                    filters: []
                }
            }, false);
        }
		function beforeToolbarRender(args) {
			args.customToolbar.splice(6, 0, {
				type: 'Separator' 
			});
			args.customToolbar.splice(9, 0, {
				type: 'Separator' 
			});
		}
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
<div id="action-description">
    <p>This sample demonstrates the toolbar options available in the pivot grid widget.</p>
</div>
}

@section Description{
<div id="description">
    <p>
        In this sample, users can generate a report at runtime, as well as save and load them. Save and load operations are performed in
        <code>localStorage</code> (session storage) using the <code>saveReport</code> and <code>loadReport</code> events.
    </p>
    <p>
        Users can change the grid or chart view using the toggle option. Other toolbar options available are:
    </p>
    <ul>
        <li>Create new report.</li>
        <li>rename report.</li>
        <li>Remove report.</li>
        <li>Save as option.</li>
        <li>Hide subtotals and grand totals.</li>
        <li>Export to PDF, Excel, and CSV.</li>
        <li>PivotTable Field List.</li>
    </ul>
</div>
}
